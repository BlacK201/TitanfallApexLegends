//
//
//

const bool ASSERTING = !!DEV

#if CLIENT || UI 
global function GetFeatureFlagByString
#endif

#if ( CLIENT || UI ) && ASSERTING 
global function ForAssertingOnly_IsValidFeatureFlagString //
#endif



//
//
//
//
//

#if(true)
Assert( !SERVER, "Server script has been stripped. Cannot run server." )
#endif

#if(false)

#endif

//
#if(false)

#endif



//
//
//
//
//

global const table<string, bool> FEATURE_FLAGS_TBL = {
	["gah stupid vscript compiler and intellij plugin"] = true,
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(true)
HAS_FLYERS = true,
#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(false)

#elseif(false)

#endif
#if(true)
HAS_APEX_ELITE = true,
#elseif(false)

#endif
}



//
//
//
//
//

#if CLIENT || UI 
bool function GetFeatureFlagByString( string featureFlagRef )
{
	//
	//

	string featureFlagRefToUse = featureFlagRef
	bool comparison = true

	if ( featureFlagRefToUse.len() > 0 && featureFlagRefToUse[0] == '!' )
	{
		featureFlagRefToUse = featureFlagRefToUse.slice(1)
		comparison = false
	}

	Assert( featureFlagRefToUse in FEATURE_FLAGS_TBL, "Unrecognized feature flag (did DFS miss something?): " + featureFlagRef )

	return FEATURE_FLAGS_TBL[featureFlagRefToUse] == comparison
}
#endif


#if ( CLIENT || UI ) && ASSERTING 
bool function ForAssertingOnly_IsValidFeatureFlagString( string featureFlagRef )
{
	//

	return (featureFlagRef in FEATURE_FLAGS_TBL)
}
#endif


